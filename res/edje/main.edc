/*
* Copyright (c) 2016 Samsung Electronics Co., Ltd. All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "../../inc/view_defines.h"
#define IMAGE_FPATH_CIPHER_BOARD "../res/images/watch/cipher_board_bg.png"
#define IMAGE_FPATH_BLACK        "../res/images/watch/black.png"
#define IMAGE_FPATH_HANDS_CENTER "../res/images/watch/hands_center.png"
#define IMAGE_FPATH_HAND_HOUR    "../res/images/watch/hand_hour.png"
#define IMAGE_FPATH_HAND_MINUTE  "../res/images/watch/hand_minute.png"
#define IMAGE_FPATH_HAND_SECOND  "../res/images/watch/hand_second.png"
#define PART_HAND_SECOND "hand_second"

collections {

   images {
//      image: IMAGE_FPATH_CIPHER_BOARD COMP;
//      image: IMAGE_FPATH_BLACK COMP;
      image: IMAGE_FPATH_HANDS_CENTER COMP;
//      image: IMAGE_FPATH_HAND_HOUR COMP;
//      image: IMAGE_FPATH_HAND_MINUTE COMP;
      image: IMAGE_FPATH_HAND_SECOND COMP;
   }

   group {
      name: "main";
      parts {
         part {
            name: PART_BACKGROUND;
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
               relative: 0.0 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
         }

/*
         part {
            name: PART_BACKGROUND;
            type: IMAGE;
            scale: 1;
            description {
               state: "default" 0.0;
               image {
                  normal: IMAGE_FPATH_CIPHER_BOARD;
               }
               align: 0.0 0.0;
               rel1 {
                  relative: 0.0 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
            description {
               */
/* Dummy state - otherwise edje_cc discards bubble-blue.png
              as it thinks it's unused *//*

               state: "foo" 0.0;
               image {
                  normal: IMAGE_FPATH_BLACK;
               }
            }
         }
*/
         part {
            name: "hands_center";
            type: IMAGE;
            scale: 1;
            description {
               state: "default" 0.0;
               image {
                  normal: IMAGE_FPATH_HANDS_CENTER;
               }
               rel1 {
                  relative: 0.4778 0.4778;
                  to: PART_BACKGROUND;
               }
               rel2 {
                  relative: 0.5278 0.5278;
                  to: PART_BACKGROUND;
               }
            }
         }
         part {
            name: PART_HAND_HOUR;
//            type: IMAGE;
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 1;
               /*image {
                  normal: IMAGE_FPATH_HAND_HOUR;
               }*/
               rel1 {
                  relative: 0.49165 0.2639;
                  to: PART_BACKGROUND;
               }
               rel2 {
                  relative: 0.52495 0.5;
                  to: PART_BACKGROUND;
               }
               map {
                  on: 1;
                  rotation {
                     center: PART_BACKGROUND;
                     x: 0.0;
                     y: 0.0;
                     z: 0.0;
                  }
               }
            }
         }
         part {
            name: PART_HAND_MINUTE;
//            type: IMAGE;
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 1;

               /*image {
                  normal: IMAGE_FPATH_HAND_MINUTE;
               }*/
               rel1 {
                  relative: 0.49165 0.2083;
                  to: PART_BACKGROUND;
               }
               rel2 {
                  relative: 0.52495 0.5;
                  to: PART_BACKGROUND;
               }
               map {
                  on: 1;
                  rotation {
                     center: PART_BACKGROUND;
                     x: 0.0;
                     y: 0.0;
                     z: 0.0;
                  }
               }
            }
         }

         part {
            name: PART_HAND_SECOND;
            type: IMAGE;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 1;
               image {
                  normal: IMAGE_FPATH_HAND_SECOND;
               }
               rel1 {
                  relative: 0.4833 0.1806;
                  to: PART_BACKGROUND;
               }
               rel2 {
                  relative: 0.5333 0.2056;
                  to: PART_BACKGROUND;
               }
               map {
                  on: 1;
                  rotation {
                     center: PART_BACKGROUND;
                     x: 0.0;
                     y: 0.0;
                     z: 0.0;
                  }
               }
            }
         }
      }
      script
      {
         public message(Msg_Type:type, id, ...) {
            static ambient_mode = 0;
            static Float:hh;
            static Float:mm;
            static Float:ss;
            if (type == MSG_INT && id == MSG_ID_AMBIENT_MODE) {
               ambient_mode = getarg(2);

               if (ambient_mode == 0) {

                  custom_state(PART:PART_HAND_SECOND, "default", 0.0);
                  set_state_val(PART:PART_HAND_SECOND, STATE_VISIBLE, 1);
                  set_state(PART:PART_HAND_SECOND, "shown", 0.0);

               }
               else { //ambient mode

                  custom_state(PART:PART_HAND_SECOND, "default", 0.0);
                  set_state_val(PART:PART_HAND_SECOND, STATE_VISIBLE, 0);
                  set_state(PART:PART_HAND_SECOND, "hidden", 0.0);

               }
            }
            if (type == MSG_INT_SET && id == MSG_ID_SET_TIME) {
               hh = getarg(2);
               mm = getarg(3);
               ss = getarg(4);


               custom_state(PART:PART_HAND_HOUR, "default", 0.0);
               set_state_val(PART:PART_HAND_HOUR, STATE_MAP_ROT_Z, hh * 360.0 / 12.0 + mm * 360.0 / 12.0 / 60.0);
               set_state(PART:PART_HAND_HOUR, "custom", 0.0);

               custom_state(PART:PART_HAND_MINUTE, "default", 0.0);
               set_state_val(PART:PART_HAND_MINUTE, STATE_MAP_ROT_Z, mm * 360.0 / 60.0);
               set_state(PART:PART_HAND_MINUTE, "custom", 0.0);

               if (ambient_mode == 0) {
                  custom_state(PART:PART_HAND_SECOND, "default", 0.0);
                  set_state_val(PART:PART_HAND_SECOND, STATE_MAP_ROT_Z, ss * 360.0 / 60.0);
                  set_state(PART:PART_HAND_SECOND, "custom", 0.0);
               }
            }
         }
      }
   }
}